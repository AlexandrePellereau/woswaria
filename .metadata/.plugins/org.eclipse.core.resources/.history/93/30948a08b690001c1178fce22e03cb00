package fr.firedragonalex.rankandlevels;

import java.util.HashMap;
import java.util.UUID;

import org.bukkit.ChatColor;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.inventory.ItemStack;

import fr.firedragonalex.rankandlevels.rank.Rank;

public class ListenerGUI implements Listener{
	
	@EventHandler
	public void onClick(InventoryClickEvent event) {
		String inventoryTitle = event.getView().getTitle();
		Player player = (Player)event.getWhoClicked();
		ItemStack item = event.getCurrentItem();
		if (item == null || !item.hasItemMeta()) return;
		if (inventoryTitle.contains(";") && inventoryTitle.split(";")[0].equals("§1LevelRewards")) {
			event.setCancelled(true);
			Integer page = Integer.valueOf(inventoryTitle.split(";")[1].split(":")[1]);
			Integer rankNumber = Integer.valueOf(inventoryTitle.split(";")[2].split(":")[1]);
			String itemName = item.getItemMeta().getDisplayName();
			if (itemName.contains("Normal") || itemName.contains("Rare") || itemName.contains("Très rare") || itemName.contains("Epique") || itemName.contains("Légendaire")) {
				if (item.containsEnchantment(Enchantment.DURABILITY)) {
					Rank rank = Rank.valueOf(itemName.split("(")[1].split(",")[0]);
					if (Main.getRank(player).equalsOrBetter(rank)) {
						UUID id = player.getUniqueId();
						int level = Integer.valueOf(itemName.split(" ")[1]);
						if (level == 1) {
							HashMap<Rank, Integer> startLevelRewardsAdvancement = new HashMap<>();
							startLevelRewardsAdvancement.put(rank, 1);
							Main.getLevelRewardsAdvancement().put(id, startLevelRewardsAdvancement);
							Gui.GuiLevelRewards(player, page, Rank.values()[rankNumber*2]);
						}
						if (Main.getLevelRewardsAdvancement().containsKey(id)) {
							if (Main.getLevelRewardsAdvancement().get(id).containsKey(rank) && Main.getLevelRewardsAdvancement().get(id).get(rank) + 1 == level) {
								
							} else {
								player.sendMessage(ChatColor.RED+"Tu dois d'abord récupérer les récompenses précédentes !");
							}
						} else {
							if (level == 1) {
								
							} else {
								player.sendMessage("§c[Error] ");
							}
						}
					} else {
						player.sendMessage(ChatColor.RED+"Tu n'as pas le grade requis !");
					}
					Gui.GuiLevelRewards(player, page, Rank.values()[rankNumber*2]);
				} else {
					player.sendMessage(ChatColor.RED+"Tu n'as pas le niveau requis !");
				}
			}
			else if (itemName.equals("Précédent")) {
				Gui.GuiLevelRewards(player, (page-1)*7, Rank.values()[rankNumber*2]);
			}
			else if (itemName.equals("Suivant")) {
				Gui.GuiLevelRewards(player, (page+1)*7, Rank.values()[rankNumber*2]);
			}
			else if (itemName.equals("Grade plus haut")) {
				Gui.GuiLevelRewards(player, page*7, Rank.values()[(rankNumber+1)*2]);
			}
			else if (itemName.equals("Grade moins haut")) {
				Gui.GuiLevelRewards(player, page*7, Rank.values()[(rankNumber-1)*2]);
			}
		}
	}
}
